# Use container-based travis workers
sudo: false

language: generic

os:
  - linux
  - osx

env:
  global:
    - MYPYTHON_VERSION=2.7
  matrix:
    - MYUSEMC=true
    - MYUSEMC=false

matrix:
  exclude:
    - os: osx
      env: MYUSEMC=false

branches:
  except:
    - /^v[0-9]/

addons:
  apt:
    packages:
    - python-dev
    - python-numpy
    - python-setuptools
    - build-essential

before_install:
  - umask 022
  - git fetch origin --unshallow --tags
  - if ${MYUSEMC}; then
        NOAPT=true; NOMC=false;
    else
        NOAPT=false; NOMC=true;
        MYPIPFLAGS="--user";
    fi
  - MYMCREPO=https://repo.continuum.io/miniconda
  - case ${TRAVIS_OS_NAME} in
    linux)
        MYMCBUNDLE=Miniconda-latest-Linux-x86_64.sh ;;
    osx)
        MYMCBUNDLE=Miniconda-latest-MacOSX-x86_64.sh ;;
    *)
        echo "Unsupported operating system." >&2;
        exit 2 ;;
    esac

  - mkdir -p ~/pkgs/

  - $NOMC || pushd ~/pkgs/
  - $NOMC || wget --timestamping ${MYMCREPO}/${MYMCBUNDLE}
  - $NOMC || test -x ~/mc/bin/conda || bash ${MYMCBUNDLE} -b -f -p ~/mc
  - $NOMC || popd
  - $NOMC || export PATH="${HOME}/mc/bin:${PATH}"
  - $NOMC || conda update --yes conda
  - $NOMC || conda install --yes python=${MYPYTHON_VERSION} conda-build jinja2
  - $NOMC || conda create --name=testenv --yes python=${MYPYTHON_VERSION} coverage
  - $NOMC || conda config --add channels pavoljuhas/channel/dev
  - $NOMC || conda config --add channels pavoljuhas

  - $NOAPT || test "${TRAVIS_OS_NAME}" = "linux" || exit $?
  - $NOAPT || devutils/makesdist
  - $NOAPT || MYTARBUNDLE="$(ls -t "${PWD}"/dist/*.tar.gz | head -1)"

install:
  - $NOMC || conda build conda-recipe
  - $NOMC || conda list --name=_test --export diffpy.structure > /tmp/mypackage.txt
  - $NOMC || source activate testenv
  - $NOMC || conda install --yes --use-local --file=/tmp/mypackage.txt

  - $NOAPT || pip install $MYPIPFLAGS coverage
  - $NOAPT || easy_install --user "${MYTARBUNDLE}"

  - cd
  - MYGIT_REV=$(python -c "import diffpy.Structure.version as v; print(v.__gitsha__)")
  - if [[ "${TRAVIS_COMMIT}" != "${MYGIT_REV}" ]]; then
        echo "Version mismatch ${TRAVIS_COMMIT} vs ${MYGIT_REV}.";
        exit 1;
    fi

script:
  - coverage run --source diffpy.Structure -m diffpy.Structure.tests.run

after_success:
  - pip install $MYPIPFLAGS codecov
  - codecov
